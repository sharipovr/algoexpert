package main

import (
	"fmt"
	"sort"
)

func missingNumbers(arr []int) []int {
	// Интуиция.
	// Нам дана неупорядоченная последовательность чисел от 1 до n,
	// где 2 числа пропущены. Нужно найти эти два числа.
	// Создать булевый массив для чисел 1..n.
	// Пометить те, что есть в arr.
	// Вернуть те, что не помечены.
	// Время: O(n)
	// Память: O(n)

	n := len(arr) + 2 // так как два числа пропущены

	// создаем булевый массив для чисел от 1 до n
	exists := make([]bool, n+1) // индекс 0 не будет использоваться поэтому n+1

	// Помечаем все существующие числа
	for _, num := range arr {
		exists[num] = true
	}

	// Выбираем в другой пустой массив те что отсутствуют (не трущные)
	missing := []int{}
	for i := 1; i <= n; i++ {
		if exists[i] == false {
			missing = append(missing, i)
		}
	}

	// сортируем результат, так как в нем всегда два числа
	// асимптотика должна быть O(1) а не nLogN
	sort.Ints(missing)
	return missing
}

func main() {
	nums := []int{1, 4, 3}
	fmt.Println(missingNumbers(nums)) // [2 5]
}
