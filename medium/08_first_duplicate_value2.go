package main

import "fmt"

func firstDuplicateValue2(arr []int) int {

	// Интуитивно задача требует найти первое число,
	// которое повторяется в массиве.
	// Чтобы сделать это эффективно, нужно отслеживать, какие числа мы уже видели.
	// Если текущее число уже было, значит, оно — первый дубликат.
	// Edge-кейсы включают массивы без дубликатов ([1, 2, 3] → -1),
	// массивы, где первый элемент дублируется позже ([1, 2, 1] → 1), и массивы с множественными дубликатами,
	// где важно найти именно тот, который появляется раньше.
	// Решение должно быть эффективным: временная сложность — O(n) (проходим массив один раз), а пространственная сложность — O(n) (множество для отслеживания чисел).

	seen := make(map[int]bool)
	for _, value := range arr {
		if seen[value] {
			return value
		}
		seen[value] = true
	}

	return -1
}

func main() {

	arr := []int{2, 1, 5, 2, 3, 3, 4}
	fmt.Println(firstDuplicateValue2(arr))
}
