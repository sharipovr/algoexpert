package main

import (
	"fmt"
	"math"
	"sort"
)

func sweetAndSavory(dishes []int, target int) []int {

	// Интуиция:
	// У нас есть блюда с "вкусом" (отрицательные = сладкие, положительные = солёные), и нужно составить пару одно сладкое + одно солёное,
	// такую чтобы:
	// их сумма была меньше или равна target
	// и как можно ближе к target!
	// Вернуть эту пару, отсортированную (сладкое первым)
	// Если пар подходящих нет — возвращаем [0, 0].
	// Решение:
	// Разделим блюда на два массива:
	// sweet: все отрицательные
	// savory: все положительные
	//	Отсортируем оба массива:
	//	sweet по возрастанию (меньше по модулю → менее сладко)
	//	savory по возрастанию (от менее до более солёного)
	//	Пройдём двумя указателями:
	//	один по sweet (слева → вправо)
	//	второй по savory (справа → влево)
	//	Для каждой пары:
	//	считаем сумму
	//	если сумма ≤ target → проверяем, насколько она близка к target, и сохраняем, если лучше
	var sweet, savory []int

	// Разделим блюда на сладкие и солёные
	for _, dish := range dishes {
		if dish < 0 {
			sweet = append(sweet, dish) // сладкие — отрицательные
		} else {
			savory = append(savory, dish) // солёные — положительные
		}
	}

	// Если не найдена пара одного сладкого и одного солёного — вернём [0, 0]
	if len(sweet) == 0 || len(savory) == 0 {
		return []int{0, 0}
	}

	// Сортируем оба массива по обычным числам
	sort.Ints(sweet)  // от более "очень сладких" к менее сладким
	sort.Ints(savory) // от менее солёных к более солёным

	bestSum := math.MinInt32
	bestPair := []int{0, 0}

	// Два указателя: один идёт по сладким, второй — по солёным
	i, j := 0, len(savory)-1

	for i < len(sweet) && j >= 0 {
		sum := sweet[i] + savory[j]

		if sum > target {
			// если сумма слишком "пересолена" — двигаем солёный указатель влево (уменьшаем солёность)
			j--
		} else {
			// если эта сумма лучше (ближе к target) — сохраняем пару
			if sum > bestSum {
				bestSum = sum
				bestPair = []int{sweet[i], savory[j]}
			}
			i++ // пробуем менее "сладкие" блюда (двигаемся вправо)
		}
	}
	return bestPair
}

func main() {
	dishes := []int{-3, -5, 1, 7}
	target := 8
	fmt.Println(sweetAndSavory(dishes, target)) // [-3, 7]
}
